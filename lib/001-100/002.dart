/*
*   Each new term in the Fibonacci sequence is generated by adding the previous 
*   two terms. By starting with 1 and 2, the first 10 terms will be:
*
*   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
* 
*   By considering the terms in the Fibonacci sequence whose values do not 
*   exceed four million, find the sum of the even-valued terms.
*/

/// Odd + Even = Odd
/// Odd + Odd = Even
/// Fib sequence is:
///   Odd Even Odd Odd Even Odd Odd Even ...
///
/// Let's see if that helps...
///
/// let EF(n) be the nth even fib number.
/// The prev even fibs are: F(n-3) <=> EF(n-1) and F(n-6) <=> EF(n-2)
/// EF(n) = F(n-1) + F(n-2)
///       = F(n-2) + F(n-3) + F(n-3) + F(n-4)
///       = F(n-3) + F(n-4) + F(n-3) + F(n-3) + F(n-4)
///       = 3EF(n-1) + F(n-5) + F(n-6) + F(n-4)
///       = 4EF(n-1) + EF(n-2)
///
/// NOICE. Time for an efficient loop (computes only even fib numbers instead
/// of the entire sequence)
void main() {
  // EF(n-2)
  var prevprev = 2;
  // EF(n-1)
  var prev = 8;
  // EF(n)
  var next = 34;

  var sum = prevprev + prev; // sum of the items so far
  while (next < 4000000) {
    sum += next;
    prevprev = prev;
    prev = next;
    next = 4 * prev + prevprev;
  }

  print('SUM: $sum');
}

/*
*   Overview: https://projecteuler.net/overview=002
*
*   BINGO - got this one. Tip for self: Maths before coding help
*/
